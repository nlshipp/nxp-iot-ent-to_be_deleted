/*
 * Copyright 2022 NXP
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 * * Neither the name of the copyright holder nor the
 *   names of its contributors may be used to endorse or promote products
 *   derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include <Ntddk.h>
#include "ImxOv10635.h"
#include "trace.h"
#include "ImxOv10635.tmh"


/*******************************************************************************
 * Code
 ******************************************************************************/

 /**
  * @brief Dump Max9286 registers.
  *
  * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
  */
NTSTATUS Ov10635_t::DumpMax9286()
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 Val;

    LOG_TRACE("%!FUNC!");
    LOG_TRACE("===================================");
    LOG_TRACE("MAX9286 registers:");
    for (UINT8 i = 0; i < 0x72; i++) {
        Status = ReadRegMax9286(i, Val);
        if (Status) {
            LOG_TRACE("failed to read from MAX9286 reg 0x%02x", i);
        }
        else {
            LOG_TRACE("reg 0x%02x: 0x%02x", i, Val);
        }
    }
    LOG_TRACE("===================================");

    return Status;
}

NTSTATUS Ov10635_t::DumpMax9271()
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 Val;

    LOG_TRACE("%!FUNC!");
    LOG_TRACE("===================================");
    LOG_TRACE("MAX9271 registers:");
    for (UINT8 i = 0; i < 0x20; i++) {
        Status = ReadRegMax9271(CHNL_0, i, Val);
        if (Status) {
            LOG_TRACE("failed to read from MAX9271 reg 0x%02x", i);
        }
        else {
            LOG_TRACE("reg 0x%02x: 0x%02x", i, Val);
        }
    }
    LOG_TRACE("===================================");

    return Status;
}

/**
 * @brief Attempts to read and return chip ID of the MAX9286 deserializer.
 *
 * @param Read Chip ID.
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Max9286_GetChipID(UINT8 &ChipID)
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 id = 0;

    LOG_TRACE("%!FUNC!");
    Status = ReadRegMax9286(0x1E, id);

    ChipID = id;
    return Status;
}

/**
 * @brief Attempts to read and return chip ID of the MAX9271 serializer.
 *
 * @param Read Chip ID.
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Max9271_GetChipID(UINT8 &ChipID)
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 id = 0;

    LOG_TRACE("%!FUNC!");
    Status = ReadRegMax9271(CHNL_DEFAULT, 0x1E, id);

    ChipID = id;
    return Status;
}

// Public interface -------------------------------------------------
/**
 * @brief Initialize Max9286 deserializer and Max9271 serializer
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Max_Init(camera_config_t* aConfigPtr)
{
    NTSTATUS Status = STATUS_SUCCESS;

    UINT8 Val = 0U;
    UINT8 LinkStatus = 0;
    UINT8 ChipID = 0U;

    LOG_TRACE("%!FUNC!");

    if (aConfigPtr == nullptr) {
        aConfigPtr = &m_Defaults;
    }

    /* 1) Reverse channel setup procedure */
    if (reverseChnlConfigured == false) {
        /* MAX9286 - Enable Custom Reverse Channel& First Pulse Length */
        Status |= WriteRegMax9286(0x3F, 0x4F);
        DelayMs(2);

        /* MAX9286 - First pulse length rise time changed from 300ns to 200ns */
        Status |= WriteRegMax9286(0x3B, 0x1E);
        DelayMs(2);

        /* MAX9271 - Optional-Enable configuration link on */
        Status |= WriteRegMax9271(CHNL_DEFAULT, 0x04, 0x43);
        DelayMs(5);

        /* MAX9286 - Enable high threshold for reverse channel input
                     buffer. This increases immunity to power supply
                     noise when the coaxial link is used for power as
                     well as signal */
        Status |= WriteRegMax9271(CHNL_DEFAULT, 0x08, 0x01);
        DelayMs(2);
        /* MAX9286 - First pulse length rise time changed from 300ns to 200ns */
        Status |= WriteRegMax9286(0x3B, 0x13);
        DelayMs(2);

        if (Status) {
            LOG_ERROR("Reverse channel configuration failed");
            return STATUS_IO_DEVICE_ERROR;
        }

        /* MAX9271 - Verify MAX9271 Chip ID */
        Status = Max9271_GetChipID(ChipID);
        if ((Status) || (ChipID != 0x09)) {
            LOG_ERROR("Serializer MAX9271 not detected, device ID 0x%04X. (Should be 0x09)", ChipID);
            return STATUS_NO_SUCH_DEVICE;
        }
    }
    else {
        LOG_INFORMATION("Reverse channel already configured, skipping");
    }

    /* 2) MAX9286 Initial Setup */
    /* MAX9286 - Disable CSI output */
    Status |= WriteRegMax9286(0x15, 0x03);
    DelayMs(2);

    if ((aConfigPtr->csiLanes < 1U) || (aConfigPtr->csiLanes > 4U)) {
        LOG_ERROR("Incorrent num of CSI data lanes requested: %d", aConfigPtr->csiLanes);
        return STATUS_INVALID_PARAMETER;
    }

    Val = IMX_MAX9286_CSI_LANE_CNT(aConfigPtr->csiLanes);
    Val |= 0x30;

    switch (aConfigPtr->cameraPixelFormat) {
    case kVIDEO_PixelFormatUYVY:
    case kVIDEO_PixelFormatYUYV:
        LOG_TRACE("kVIDEO_PixelFormatUYVY or kVIDEO_PixelFormatYUYV");
        Val |= IMX_MAX9286_DATA_TYPE_YUV422_8_BIT;
        break;
    default:
        LOG_ERROR("Unsuported pixel format: 0x%x", aConfigPtr->cameraPixelFormat);
        return STATUS_INVALID_PARAMETER;
    }

    /* MAX9286 - Enable data lanes */
    Status |= WriteRegMax9286(0x12, Val);
    DelayMs(2);

    /* MAX9286 - Enable frame sync */
    Status |= WriteRegMax9286(0x01, 0x01);
    DelayMs(2);

    /* MAX9286 - Disable CSI output */
    Status |= WriteRegMax9286(0x00, 0xEF);
    DelayMs(2);

    /* 3) MAX9286 GMSL Link Setup */

    /* MAX9286 - Read status of video and configuration link between MAX9286 and MAX9271 */
    Status |= ReadRegMax9286(0x49, LinkStatus);
    LOG_TRACE("Link status between MAX9286 and MAX9271 is 0x%02X", LinkStatus);

    for (UINT8 i = 0; i < 1; i++) {
        Val = 0;
        if (LinkStatus & (IMX_MAX9286_CONFIGDET(i) | IMX_MAX9286_VIDEODET(i))) {
            LOG_TRACE("Serializer(Camera) detected od link %d, configuring...", i);

            Val = 0xF0 | (1 << i);
            /* MAX9286 - Enable Link 0-3 Reverse Channel */
            Status |= WriteRegMax9286(0x0A, Val);
            Val = Max9271UniqueAddresses[i] << 1;
            /* MAX9271 - Change serializer 0-3 slave address */
            Status |= WriteRegMax9271(CHNL_DEFAULT, 0x00, Val);
            /* MAX9271 - Enable DBL, Set Edge Select 1=Rise / 0=Fall, Enable HS/VS encoding */
            Status |= WriteRegMax9271((CHNL_IDX)i, 0x07, 0x84);
            /* Wait 2ms after changing DBL */
            DelayMs(2);
            /* MAX9271 - Unique Link image sensor slave address */
            Val = Ov10635UniqueAddresses[i] << 1;
            Status |= WriteRegMax9271((CHNL_IDX)i, 0x09, Val);
            /* MAX9271 - Link 0-3 image sensor slave address */
            Val = IMX_OV10635_DEFAULT_I2C_DEVICE_ADDRESS << 1;
            Status |= WriteRegMax9271((CHNL_IDX)i, 0x0A, Val);
            /* MAX9271 - Serializer broadcast address */
            Val = IMX_MAX9271_BROADCAST_I2C_DEVICE_ADDRESS << 1;
            Status |= WriteRegMax9271((CHNL_IDX)i, 0x0B, Val);
            /* MAX9271 - Link 0-3 serializer address */
            Val = Max9271UniqueAddresses[i] << 1;
            Status |= WriteRegMax9271((CHNL_IDX)i, 0x0C, Val);
            cameraInitialized[i] = true;
        }
        else {
            LOG_WARNING("No camera on link %d, skipping serializer's initialization", i);
            cameraInitialized[i] = false;
        }
    }

    /* MAX9286 - Enable all I2C reverse/forward channels */
    Status |= WriteRegMax9286(0x0A, 0xFF);

    /* MAX9286 - Disable auto acknowledge */
    Status |= WriteRegMax9286(0x34, 0x36);

    DumpMax9286();
    DumpMax9271();
    return Status;
}

/**
 * @brief Initialize the camera device to 720p 30fps UYUV 2-lane and start streaming.
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Max_VideoEnable()
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 Lock, LinkStatus = 0;

    LOG_TRACE("%!FUNC!");

    /* MAX9286 - Enable auto acknowledge */
    WriteRegMax9286(0x34, 0xB6);

    /* 5) Enable GMSL & CSI-2 */

    WriteRegMax9271(CHNL_BROADCAST, 0x04, 0x83);
    DelayMs(5);

    WriteRegMax9286(0x69, 0x30);

    ReadRegMax9286(0x49, LinkStatus);
    LOG_TRACE("Link status between MAX9286 and MAX9271 is 0x%02X", LinkStatus);


    WriteRegMax9286(0x00, 0xE1);

    DelayMs(500);

    ReadRegMax9286(0x31, Lock);
    if (!(Lock & 0x40)) {
        LOG_ERROR("Frame synchronization not locked");
        return STATUS_NO_SUCH_DEVICE;
    }

    /* MAX9286 - Enable CSI2 output */
    WriteRegMax9286(0x15, 0x0B);

    return Status;
}

/**
 * @brief Initialize OV10635 sensor
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Ov10635_Init(camera_config_t* aConfigPtr)
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT32 arraySize = 0;
    UINT8 PixFmt = 0;

    LOG_TRACE("%!FUNC!");

    if (aConfigPtr == nullptr) {
        aConfigPtr = &m_Defaults;
    }

    switch (aConfigPtr->cameraPixelFormat) {
    case kVIDEO_PixelFormatUYVY:
        PixFmt = 0x3A;
        LOG_TRACE("Ov10635 PixFmt 0x%02X (UYVY)", PixFmt);
        break;
    case kVIDEO_PixelFormatYUYV:
        PixFmt = 0x38;
        LOG_TRACE("Ov10635 PixFmt 0x%02X (YUYV)", PixFmt);
        break;
    default:
        LOG_ERROR("Unsuported pixel format: 0x%x, setting default 0x38(UYVY)", aConfigPtr->cameraPixelFormat);
        PixFmt = 0x3A;
        return STATUS_INVALID_PARAMETER;
    }

   static Ov10635_t::reg_val_t InitParam[] = {
         { 0x0103, 0x01, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x300C, 0x61, 0},
         { 0x301B, 0xFF, 0},
         { 0x301C, 0xFF, 0},
         { 0x301A, 0xFF, 0},
         { 0x3011, 0x42, 0},
         { 0x6900, 0x0C, 0},
         { 0x6901, 0x11, 0},
         { 0x3503, 0x10, 0},
         { 0x3025, 0x03, 0},
         { 0x3003, 0x20, 0},
#ifdef CAMERA_USES_15HZ
         { 0x3004, 0x23, 0}, /* 0x23 = 48 MHz 15Hz, 0x21 = 96MHz 30Hz */
#else
         { 0x3004, 0x21, 0}, /* 0x23 = 48 MHz 15Hz, 0x21 = 96MHz 30Hz */
#endif
         { 0x3005, 0x20, 0},
         { 0x3006, 0x91, 0},
         { 0x3600, 0x74, 0},
         { 0x3601, 0x2B, 0},
         { 0x3612, 0x00, 0},
         { 0x3611, 0x67, 0},
         { 0x3633, 0xCA, 0},
         { 0x3602, 0x2F, 0},
         { 0x3603, 0x00, 0},
         { 0x3630, 0x28, 0},
         { 0x3631, 0x16, 0},
         { 0x3714, 0x10, 0},
         { 0x371D, 0x01, 0},

         { 0x3007, 0x01, 0},
         { 0x3024, 0x05, 0}, /* yuv format short */
         { 0x3020, 0x0B, 0},
         { 0x3702, 0x20, 0},
         { 0x3703, 0x48, 0},
         { 0x3704, 0x32, 0},
         { 0x3709, 0xA8, 0},
         { 0x3709, 0xA8, 0},
         { 0x370C, 0xC7, 0},
         { 0x370D, 0x80, 0},
         { 0x3712, 0x00, 0},
         { 0x3713, 0x20, 0},
         { 0x3715, 0x04, 0},
         { 0x381D, 0x40, 0},
         { 0x381C, 0x00, 0},
         { 0x3822, 0x50, 0},
         { 0x3824, 0x50, 0},
         { 0x3815, 0x8C, 0},
         { 0x3804, 0x05, 0},
         { 0x3805, 0x1F, 0},
         { 0x3800, 0x00, 0},
         { 0x3801, 0x00, 0},
         { 0x3806, 0x03, 0}, /* Vertical end ={0x6, 0x7} = 0x329 = 809 */
         { 0x3807, 0x29, 0},
         { 0x3802, 0x00, 0}, /* Vertical start{0x2,0x3} = 0x04 */
         { 0x3803, 0x04, 0},
         { 0x3808, 0x05, 0}, /* Output hsize{0x8,0x9} -->0x500=1280 */
         { 0x3809, 0x00, 0},
#if 0
         { 0x380A, 0x03, 0}, /* Output vsize{0xA,0xB} -->0x320=800 */
         { 0x380B, 0x20, 0},
#endif
        { 0x380A, 0x02, 0}, /* Output vsize{0xA,0xB} -->0x2D0=720 */
        { 0x380B, 0xD0, 0},
        { 0x380C, 0x07, 0}, /* Line size = {0xC,0xD} -->0x771=1905 */
        { 0x380D, 0x71, 0},
        { 0x6E42, 0x03, 0},
        { 0x6E43, 0x48, 0},
        { 0x380E, 0x03, 0}, /* Frame size = {0xE,0xF}-->0x348=840 */
        { 0x380F, 0x48, 0},
        { 0x3813, 0x02, 0},
        { 0x3811, 0x10, 0},
        { 0x381F, 0x0C, 0},
        { 0x3828, 0x03, 0},
        { 0x3829, 0x10, 0},
        { 0x382A, 0x10, 0},
        { 0x382B, 0x10, 0},
        { 0x3621, 0x64, 0},
        { 0x5005, 0x08, 0},
        { 0x56D5, 0x00, 0},
        { 0x56D6, 0x80, 0},
        { 0x56D7, 0x00, 0},
        { 0x56D8, 0x00, 0},
        { 0x56D9, 0x00, 0},
        { 0x56DA, 0x80, 0},
        { 0x56DB, 0x00, 0},
        { 0x56DC, 0x00, 0},
        { 0x56E8, 0x00, 0},
        { 0x56E9, 0x7F, 0},
        { 0x56EA, 0x00, 0},
        { 0x56EB, 0x7F, 0},
        { 0x5100, 0x00, 0},
        { 0x5101, 0x80, 0},
        { 0x5102, 0x00, 0},
        { 0x5103, 0x80, 0},
        { 0x5104, 0x00, 0},
        { 0x5105, 0x80, 0},
        { 0x5106, 0x00, 0},
        { 0x5107, 0x80, 0},
        { 0x5108, 0x00, 0},
        { 0x5109, 0x00, 0},
        { 0x510A, 0x00, 0},
        { 0x510B, 0x00, 0},
        { 0x510C, 0x00, 0},
        { 0x510D, 0x00, 0},
        { 0x510E, 0x00, 0},
        { 0x510F, 0x00, 0},
        { 0x5110, 0x00, 0},
        { 0x5111, 0x80, 0},
        { 0x5112, 0x00, 0},
        { 0x5113, 0x80, 0},
        { 0x5114, 0x00, 0},
        { 0x5115, 0x80, 0},
        { 0x5116, 0x00, 0},
        { 0x5117, 0x80, 0},
        { 0x5118, 0x00, 0},
        { 0x5119, 0x00, 0},
        { 0x511A, 0x00, 0},
        { 0x511B, 0x00, 0},
        { 0x511C, 0x00, 0},
        { 0x511D, 0x00, 0},
        { 0x511E, 0x00, 0},
        { 0x511F, 0x00, 0},
        { 0x56D0, 0x00, 0},
        { 0x5006, 0x24, 0},
        { 0x5608, 0x0D, 0},
        { 0x52D7, 0x06, 0},
        { 0x528D, 0x08, 0},
        { 0x5293, 0x12, 0},
        { 0x52D3, 0x12, 0},
        { 0x5288, 0x06, 0},
        { 0x5289, 0x20, 0},
        { 0x52C8, 0x06, 0},
        { 0x52C9, 0x20, 0},
        { 0x52CD, 0x04, 0},
        { 0x5381, 0x00, 0},
        { 0x5382, 0xFF, 0},
        { 0x5589, 0x76, 0},
        { 0x558A, 0x47, 0},
        { 0x558B, 0xEF, 0},
        { 0x558C, 0xC9, 0},
        { 0x558D, 0x49, 0},
        { 0x558E, 0x30, 0},
        { 0x558F, 0x67, 0},
        { 0x5590, 0x3F, 0},
        { 0x5591, 0xF0, 0},
        { 0x5592, 0x10, 0},
        { 0x55A2, 0x6D, 0},
        { 0x55A3, 0x55, 0},
        { 0x55A4, 0xC3, 0},
        { 0x55A5, 0xB5, 0},
        { 0x55A6, 0x43, 0},
        { 0x55A7, 0x38, 0},
        { 0x55A8, 0x5F, 0},
        { 0x55A9, 0x4B, 0},
        { 0x55AA, 0xF0, 0},
        { 0x55AB, 0x10, 0},
        { 0x5581, 0x52, 0},
        { 0x5300, 0x01, 0},
        { 0x5301, 0x00, 0},
        { 0x5302, 0x00, 0},
        { 0x5303, 0x0E, 0},
        { 0x5304, 0x00, 0},
        { 0x5305, 0x0E, 0},
        { 0x5306, 0x00, 0},
        { 0x5307, 0x36, 0},
        { 0x5308, 0x00, 0},
        { 0x5309, 0xD9, 0},
        { 0x530A, 0x00, 0},
        { 0x530B, 0x0F, 0},
        { 0x530C, 0x00, 0},
        { 0x530D, 0x2C, 0},
        { 0x530E, 0x00, 0},
        { 0x530F, 0x59, 0},
        { 0x5310, 0x00, 0},
        { 0x5311, 0x7B, 0},
        { 0x5312, 0x00, 0},
        { 0x5313, 0x22, 0},
        { 0x5314, 0x00, 0},
        { 0x5315, 0xD5, 0},
        { 0x5316, 0x00, 0},
        { 0x5317, 0x13, 0},
        { 0x5318, 0x00, 0},
        { 0x5319, 0x18, 0},
        { 0x531A, 0x00, 0},
        { 0x531B, 0x26, 0},
        { 0x531C, 0x00, 0},
        { 0x531D, 0xDC, 0},
        { 0x531E, 0x00, 0},
        { 0x531F, 0x02, 0},
        { 0x5320, 0x00, 0},
        { 0x5321, 0x24, 0},
        { 0x5322, 0x00, 0},
        { 0x5323, 0x56, 0},
        { 0x5324, 0x00, 0},
        { 0x5325, 0x85, 0},
        { 0x5326, 0x00, 0},
        { 0x5327, 0x20, 0},
        { 0x5609, 0x01, 0},
        { 0x560A, 0x40, 0},
        { 0x560B, 0x01, 0},
        { 0x560C, 0x40, 0},
        { 0x560D, 0x00, 0},
        { 0x560E, 0xFA, 0},
        { 0x560F, 0x00, 0},
        { 0x5610, 0xFA, 0},
        { 0x5611, 0x02, 0},
        { 0x5612, 0x80, 0},
        { 0x5613, 0x02, 0},
        { 0x5614, 0x80, 0},
        { 0x5615, 0x01, 0},
        { 0x5616, 0x2C, 0},
        { 0x5617, 0x01, 0},
        { 0x5618, 0x2C, 0},
        { 0x563B, 0x01, 0},
        { 0x563C, 0x01, 0},
        { 0x563D, 0x01, 0},
        { 0x563E, 0x01, 0},
        { 0x563F, 0x03, 0},
        { 0x5640, 0x03, 0},
        { 0x5641, 0x03, 0},
        { 0x5642, 0x05, 0},
        { 0x5643, 0x09, 0},
        { 0x5644, 0x05, 0},
        { 0x5645, 0x05, 0},
        { 0x5646, 0x05, 0},
        { 0x5647, 0x05, 0},
        { 0x5651, 0x00, 0},
        { 0x5652, 0x80, 0},
        { 0x521A, 0x01, 0},
        { 0x521B, 0x03, 0},
        { 0x521C, 0x06, 0},
        { 0x521D, 0x0A, 0},
        { 0x521E, 0x0E, 0},
        { 0x521F, 0x12, 0},
        { 0x5220, 0x16, 0},
        { 0x5223, 0x02, 0},
        { 0x5225, 0x04, 0},
        { 0x5227, 0x08, 0},
        { 0x5229, 0x0C, 0},
        { 0x522B, 0x12, 0},
        { 0x522D, 0x18, 0},
        { 0x522F, 0x1E, 0},
        { 0x5241, 0x04, 0},
        { 0x5242, 0x01, 0},
        { 0x5243, 0x03, 0},
        { 0x5244, 0x06, 0},
        { 0x5245, 0x0A, 0},
        { 0x5246, 0x0E, 0},
        { 0x5247, 0x12, 0},
        { 0x5248, 0x16, 0},
        { 0x524A, 0x03, 0},
        { 0x524C, 0x04, 0},
        { 0x524E, 0x08, 0},
        { 0x5250, 0x0C, 0},
        { 0x5252, 0x12, 0},
        { 0x5254, 0x18, 0},
        { 0x5256, 0x1E, 0},
        { 0x4606, 0x07, 0},
        { 0x4607, 0x71, 0},
        { 0x460A, 0x02, 0},
        { 0x460B, 0x70, 0},
        { 0x460C, 0x00, 0},
        { 0x4620, 0x0E, 0},
        { 0x4700, 0x04, 0},
        { 0x4701, 0x00, 0},
        { 0x4702, 0x01, 0},
        { 0x4004, 0x04, 0},
        { 0x4005, 0x18, 0},
        { 0x4001, 0x06, 0},
        { 0x4050, 0x22, 0},
        { 0x4051, 0x24, 0},
        { 0x4052, 0x02, 0},
        { 0x4057, 0x9C, 0},
        { 0x405A, 0x00, 0},
        { 0x4202, 0x02, 0},
        { 0x3023, 0x10, 0},
        { 0x0100, 0x01, 0},
        { 0x0100, 0x01, 0},
        { 0x6F10, 0x07, 0},
        { 0x6F11, 0x82, 0},
        { 0x6F12, 0x04, 0},
        { 0x6F13, 0x00, 0},
        { 0x6F14, 0x1F, 0},
        { 0x6F15, 0xDD, 0},
        { 0x6F16, 0x04, 0},
        { 0x6F17, 0x04, 0},
        { 0x6F18, 0x36, 0},
        { 0x6F19, 0x66, 0},
        { 0x6F1A, 0x04, 0},
        { 0x6F1B, 0x08, 0},
        { 0x6F1C, 0x0C, 0},
        { 0x6F1D, 0xE7, 0},
        { 0x6F1E, 0x04, 0},
        { 0x6F1F, 0x0C, 0},
        { 0xD000, 0x19, 0},
        { 0xD001, 0xA0, 0},
        { 0xD002, 0x00, 0},
        { 0xD003, 0x01, 0},
        { 0xD004, 0xA9, 0},
        { 0xD005, 0xAD, 0},
        { 0xD006, 0x10, 0},
        { 0xD007, 0x40, 0},
        { 0xD008, 0x44, 0},
        { 0xD009, 0x00, 0},
        { 0xD00A, 0x68, 0},
        { 0xD00B, 0x00, 0},
        { 0xD00C, 0x15, 0},
        { 0xD00D, 0x00, 0},
        { 0xD00E, 0x00, 0},
        { 0xD00F, 0x00, 0},
        { 0xD010, 0x19, 0},
        { 0xD011, 0xA0, 0},
        { 0xD012, 0x00, 0},
        { 0xD013, 0x01, 0},
        { 0xD014, 0xA9, 0},
        { 0xD015, 0xAD, 0},
        { 0xD016, 0x12, 0},
        { 0xD017, 0x30, 0},
        { 0xD018, 0x44, 0},
        { 0xD019, 0x00, 0},
        { 0xD01A, 0x68, 0},
        { 0xD01B, 0x00, 0},
        { 0xD01C, 0x15, 0},
        { 0xD01D, 0x00, 0},
        { 0xD01E, 0x00, 0},
        { 0xD01F, 0x00, 0},
        { 0xD020, 0x19, 0},
        { 0xD021, 0xA0, 0},
        { 0xD022, 0x00, 0},
        { 0xD023, 0x01, 0},
        { 0xD024, 0xA9, 0},
        { 0xD025, 0xAD, 0},
        { 0xD026, 0x13, 0},
        { 0xD027, 0x18, 0},
        { 0xD028, 0x44, 0},
        { 0xD029, 0x00, 0},
        { 0xD02A, 0x68, 0},
        { 0xD02B, 0x00, 0},
        { 0xD02C, 0x15, 0},
        { 0xD02D, 0x00, 0},
        { 0xD02E, 0x00, 0},
        { 0xD02F, 0x00, 0},
        { 0xD030, 0x19, 0},
        { 0xD031, 0xA0, 0},
        { 0xD032, 0x00, 0},
        { 0xD033, 0x01, 0},
        { 0xD034, 0xA9, 0},
        { 0xD035, 0xAD, 0},
        { 0xD036, 0x13, 0},
        { 0xD037, 0x3C, 0},
        { 0xD038, 0x44, 0},
        { 0xD039, 0x00, 0},
        { 0xD03A, 0x68, 0},
        { 0xD03B, 0x00, 0},
        { 0xD03C, 0x15, 0},
        { 0xD03D, 0x00, 0},
        { 0xD03E, 0x00, 0},
        { 0xD03F, 0x00, 0},
        { 0xD040, 0x18, 0},
        { 0xD041, 0x60, 0},
        { 0xD042, 0x00, 0},
        { 0xD043, 0x01, 0},
        { 0xD044, 0x9C, 0},
        { 0xD045, 0x80, 0},
        { 0xD046, 0x00, 0},
        { 0xD047, 0x00, 0},
        { 0xD048, 0xA8, 0},
        { 0xD049, 0x63, 0},
        { 0xD04A, 0x06, 0},
        { 0xD04B, 0x4C, 0},
        { 0xD04C, 0xD8, 0},
        { 0xD04D, 0x03, 0},
        { 0xD04E, 0x20, 0},
        { 0xD04F, 0x00, 0},
        { 0xD050, 0x18, 0},
        { 0xD051, 0x60, 0},
        { 0xD052, 0x00, 0},
        { 0xD053, 0x01, 0},
        { 0xD054, 0xA8, 0},
        { 0xD055, 0x63, 0},
        { 0xD056, 0x02, 0},
        { 0xD057, 0xA4, 0},
        { 0xD058, 0x84, 0},
        { 0xD059, 0xA3, 0},
        { 0xD05A, 0x00, 0},
        { 0xD05B, 0x00, 0},
        { 0xD05C, 0x18, 0},
        { 0xD05D, 0x60, 0},
        { 0xD05E, 0x00, 0},
        { 0xD05F, 0x01, 0},
        { 0xD060, 0xA8, 0},
        { 0xD061, 0x63, 0},
        { 0xD062, 0x03, 0},
        { 0xD063, 0xF0, 0},
        { 0xD064, 0x8C, 0},
        { 0xD065, 0x85, 0},
        { 0xD066, 0x00, 0},
        { 0xD067, 0x6E, 0},
        { 0xD068, 0x98, 0},
        { 0xD069, 0x63, 0},
        { 0xD06A, 0x00, 0},
        { 0xD06B, 0x00, 0},
        { 0xD06C, 0xE5, 0},
        { 0xD06D, 0x83, 0},
        { 0xD06E, 0x20, 0},
        { 0xD06F, 0x00, 0},
        { 0xD070, 0x10, 0},
        { 0xD071, 0x00, 0},
        { 0xD072, 0x00, 0},
        { 0xD073, 0x4B, 0},
        { 0xD074, 0x18, 0},
        { 0xD075, 0x80, 0},
        { 0xD076, 0x80, 0},
        { 0xD077, 0x06, 0},
        { 0xD078, 0x18, 0},
        { 0xD079, 0x60, 0},
        { 0xD07A, 0x00, 0},
        { 0xD07B, 0x01, 0},
        { 0xD07C, 0xA8, 0},
        { 0xD07D, 0x63, 0},
        { 0xD07E, 0x01, 0},
        { 0xD07F, 0x00, 0},
        { 0xD080, 0x94, 0},
        { 0xD081, 0x85, 0},
        { 0xD082, 0x00, 0},
        { 0xD083, 0x70, 0},
        { 0xD084, 0x94, 0},
        { 0xD085, 0x63, 0},
        { 0xD086, 0x00, 0},
        { 0xD087, 0x02, 0},
        { 0xD088, 0xE4, 0},
        { 0xD089, 0x83, 0},
        { 0xD08A, 0x20, 0},
        { 0xD08B, 0x00, 0},
        { 0xD08C, 0x10, 0},
        { 0xD08D, 0x00, 0},
        { 0xD08E, 0x00, 0},
        { 0xD08F, 0x44, 0},
        { 0xD090, 0x18, 0},
        { 0xD091, 0x80, 0},
        { 0xD092, 0x80, 0},
        { 0xD093, 0x06, 0},
        { 0xD094, 0x8C, 0},
        { 0xD095, 0x65, 0},
        { 0xD096, 0x00, 0},
        { 0xD097, 0x76, 0},
        { 0xD098, 0xBC, 0},
        { 0xD099, 0x23, 0},
        { 0xD09A, 0x00, 0},
        { 0xD09B, 0x00, 0},
        { 0xD09C, 0x0C, 0},
        { 0xD09D, 0x00, 0},
        { 0xD09E, 0x00, 0},
        { 0xD09F, 0x41, 0},
        { 0xD0A0, 0xA8, 0},
        { 0xD0A1, 0x64, 0},
        { 0xD0A2, 0x38, 0},
        { 0xD0A3, 0x29, 0},
        { 0xD0A4, 0x18, 0},
        { 0xD0A5, 0x80, 0},
        { 0xD0A6, 0x80, 0},
        { 0xD0A7, 0x06, 0},
        { 0xD0A8, 0xA8, 0},
        { 0xD0A9, 0x64, 0},
        { 0xD0AA, 0x38, 0},
        { 0xD0AB, 0x24, 0},
        { 0xD0AC, 0x8C, 0},
        { 0xD0AD, 0x63, 0},
        { 0xD0AE, 0x00, 0},
        { 0xD0AF, 0x00, 0},
        { 0xD0B0, 0xA4, 0},
        { 0xD0B1, 0x63, 0},
        { 0xD0B2, 0x00, 0},
        { 0xD0B3, 0x40, 0},
        { 0xD0B4, 0xBC, 0},
        { 0xD0B5, 0x23, 0},
        { 0xD0B6, 0x00, 0},
        { 0xD0B7, 0x00, 0},
        { 0xD0B8, 0x10, 0},
        { 0xD0B9, 0x00, 0},
        { 0xD0BA, 0x00, 0},
        { 0xD0BB, 0x0A, 0},
        { 0xD0BC, 0x18, 0},
        { 0xD0BD, 0xE0, 0},
        { 0xD0BE, 0x80, 0},
        { 0xD0BF, 0x06, 0},
        { 0xD0C0, 0x9C, 0},
        { 0xD0C1, 0xC0, 0},
        { 0xD0C2, 0x00, 0},
        { 0xD0C3, 0x40, 0},
        { 0xD0C4, 0xA8, 0},
        { 0xD0C5, 0x64, 0},
        { 0xD0C6, 0x55, 0},
        { 0xD0C7, 0x86, 0},
        { 0xD0C8, 0xA8, 0},
        { 0xD0C9, 0xA4, 0},
        { 0xD0CA, 0x55, 0},
        { 0xD0CB, 0x87, 0},
        { 0xD0CC, 0xD8, 0},
        { 0xD0CD, 0x03, 0},
        { 0xD0CE, 0x30, 0},
        { 0xD0CF, 0x00, 0},
        { 0xD0D0, 0xA8, 0},
        { 0xD0D1, 0x64, 0},
        { 0xD0D2, 0x55, 0},
        { 0xD0D3, 0x88, 0},
        { 0xD0D4, 0xD8, 0},
        { 0xD0D5, 0x05, 0},
        { 0xD0D6, 0x30, 0},
        { 0xD0D7, 0x00, 0},
        { 0xD0D8, 0xD8, 0},
        { 0xD0D9, 0x03, 0},
        { 0xD0DA, 0x30, 0},
        { 0xD0DB, 0x00, 0},
        { 0xD0DC, 0x18, 0},
        { 0xD0DD, 0xE0, 0},
        { 0xD0DE, 0x80, 0},
        { 0xD0DF, 0x06, 0},
        { 0xD0E0, 0xA9, 0},
        { 0xD0E1, 0x07, 0},
        { 0xD0E2, 0x3D, 0},
        { 0xD0E3, 0x05, 0},
        { 0xD0E4, 0x8C, 0},
        { 0xD0E5, 0x68, 0},
        { 0xD0E6, 0x00, 0},
        { 0xD0E7, 0x00, 0},
        { 0xD0E8, 0xB8, 0},
        { 0xD0E9, 0x63, 0},
        { 0xD0EA, 0x00, 0},
        { 0xD0EB, 0x18, 0},
        { 0xD0EC, 0xB8, 0},
        { 0xD0ED, 0x63, 0},
        { 0xD0EE, 0x00, 0},
        { 0xD0EF, 0x98, 0},
        { 0xD0F0, 0xBC, 0},
        { 0xD0F1, 0x03, 0},
        { 0xD0F2, 0x00, 0},
        { 0xD0F3, 0x00, 0},
        { 0xD0F4, 0x10, 0},
        { 0xD0F5, 0x00, 0},
        { 0xD0F6, 0x00, 0},
        { 0xD0F7, 0x10, 0},
        { 0xD0F8, 0xA9, 0},
        { 0xD0F9, 0x67, 0},
        { 0xD0FA, 0x67, 0},
        { 0xD0FB, 0x02, 0},
        { 0xD0FC, 0xB8, 0},
        { 0xD0FD, 0xA3, 0},
        { 0xD0FE, 0x00, 0},
        { 0xD0FF, 0x19, 0},
        { 0xD100, 0x8C, 0},
        { 0xD101, 0x8B, 0},
        { 0xD102, 0x00, 0},
        { 0xD103, 0x00, 0},
        { 0xD104, 0xA9, 0},
        { 0xD105, 0xA7, 0},
        { 0xD106, 0x67, 0},
        { 0xD107, 0x03, 0},
        { 0xD108, 0xB8, 0},
        { 0xD109, 0xC4, 0},
        { 0xD10A, 0x00, 0},
        { 0xD10B, 0x08, 0},
        { 0xD10C, 0x8C, 0},
        { 0xD10D, 0x6D, 0},
        { 0xD10E, 0x00, 0},
        { 0xD10F, 0x00, 0},
        { 0xD110, 0xB8, 0},
        { 0xD111, 0x85, 0},
        { 0xD112, 0x00, 0},
        { 0xD113, 0x98, 0},
        { 0xD114, 0xE0, 0},
        { 0xD115, 0x63, 0},
        { 0xD116, 0x30, 0},
        { 0xD117, 0x04, 0},
        { 0xD118, 0xE0, 0},
        { 0xD119, 0x64, 0},
        { 0xD11A, 0x18, 0},
        { 0xD11B, 0x00, 0},
        { 0xD11C, 0xA4, 0},
        { 0xD11D, 0x83, 0},
        { 0xD11E, 0xFF, 0},
        { 0xD11F, 0xFF, 0},
        { 0xD120, 0xB8, 0},
        { 0xD121, 0x64, 0},
        { 0xD122, 0x00, 0},
        { 0xD123, 0x48, 0},
        { 0xD124, 0xD8, 0},
        { 0xD125, 0x0B, 0},
        { 0xD126, 0x18, 0},
        { 0xD127, 0x00, 0},
        { 0xD128, 0xD8, 0},
        { 0xD129, 0x0D, 0},
        { 0xD12A, 0x20, 0},
        { 0xD12B, 0x00, 0},
        { 0xD12C, 0x9C, 0},
        { 0xD12D, 0x60, 0},
        { 0xD12E, 0x00, 0},
        { 0xD12F, 0x00, 0},
        { 0xD130, 0xD8, 0},
        { 0xD131, 0x08, 0},
        { 0xD132, 0x18, 0},
        { 0xD133, 0x00, 0},
        { 0xD134, 0x9C, 0},
        { 0xD135, 0x80, 0},
        { 0xD136, 0x00, 0},
        { 0xD137, 0x70, 0},
        { 0xD138, 0xA8, 0},
        { 0xD139, 0x67, 0},
        { 0xD13A, 0x38, 0},
        { 0xD13B, 0x22, 0},
        { 0xD13C, 0xA8, 0},
        { 0xD13D, 0xC7, 0},
        { 0xD13E, 0x38, 0},
        { 0xD13F, 0x43, 0},
        { 0xD140, 0xD8, 0},
        { 0xD141, 0x03, 0},
        { 0xD142, 0x20, 0},
        { 0xD143, 0x00, 0},
        { 0xD144, 0xA8, 0},
        { 0xD145, 0xA7, 0},
        { 0xD146, 0x38, 0},
        { 0xD147, 0x42, 0},
        { 0xD148, 0x9C, 0},
        { 0xD149, 0x80, 0},
        { 0xD14A, 0x00, 0},
        { 0xD14B, 0x00, 0},
        { 0xD14C, 0x9C, 0},
        { 0xD14D, 0x84, 0},
        { 0xD14E, 0x00, 0},
        { 0xD14F, 0x01, 0},
        { 0xD150, 0x8C, 0},
        { 0xD151, 0x65, 0},
        { 0xD152, 0x00, 0},
        { 0xD153, 0x00, 0},
        { 0xD154, 0xBC, 0},
        { 0xD155, 0x03, 0},
        { 0xD156, 0x00, 0},
        { 0xD157, 0x00, 0},
        { 0xD158, 0x10, 0},
        { 0xD159, 0x00, 0},
        { 0xD15A, 0x00, 0},
        { 0xD15B, 0x0C, 0},
        { 0xD15C, 0xA4, 0},
        { 0xD15D, 0x84, 0},
        { 0xD15E, 0x00, 0},
        { 0xD15F, 0xFF, 0},
        { 0xD160, 0x8C, 0},
        { 0xD161, 0x66, 0},
        { 0xD162, 0x00, 0},
        { 0xD163, 0x00, 0},
        { 0xD164, 0xBC, 0},
        { 0xD165, 0x03, 0},
        { 0xD166, 0x00, 0},
        { 0xD167, 0x00, 0},
        { 0xD168, 0x10, 0},
        { 0xD169, 0x00, 0},
        { 0xD16A, 0x00, 0},
        { 0xD16B, 0x09, 0},
        { 0xD16C, 0xBC, 0},
        { 0xD16D, 0x04, 0},
        { 0xD16E, 0x00, 0},
        { 0xD16F, 0x02, 0},
        { 0xD170, 0x9C, 0},
        { 0xD171, 0x80, 0},
        { 0xD172, 0x00, 0},
        { 0xD173, 0x00, 0},
        { 0xD174, 0x8C, 0},
        { 0xD175, 0x65, 0},
        { 0xD176, 0x00, 0},
        { 0xD177, 0x00, 0},
        { 0xD178, 0x9C, 0},
        { 0xD179, 0x84, 0},
        { 0xD17A, 0x00, 0},
        { 0xD17B, 0x01, 0},
        { 0xD17C, 0xBC, 0},
        { 0xD17D, 0x03, 0},
        { 0xD17E, 0x00, 0},
        { 0xD17F, 0x00, 0},
        { 0xD180, 0x0F, 0},
        { 0xD181, 0xFF, 0},
        { 0xD182, 0xFF, 0},
        { 0xD183, 0xF8, 0},
        { 0xD184, 0xA4, 0},
        { 0xD185, 0x84, 0},
        { 0xD186, 0x00, 0},
        { 0xD187, 0xFF, 0},
        { 0xD188, 0xBC, 0},
        { 0xD189, 0x04, 0},
        { 0xD18A, 0x00, 0},
        { 0xD18B, 0x02, 0},
        { 0xD18C, 0x0F, 0},
        { 0xD18D, 0xFF, 0},
        { 0xD18E, 0xFF, 0},
        { 0xD18F, 0xF1, 0},
        { 0xD190, 0x9C, 0},
        { 0xD191, 0x84, 0},
        { 0xD192, 0x00, 0},
        { 0xD193, 0x01, 0},
        { 0xD194, 0x00, 0},
        { 0xD195, 0x00, 0},
        { 0xD196, 0x00, 0},
        { 0xD197, 0x1D, 0},
        { 0xD198, 0x18, 0},
        { 0xD199, 0x60, 0},
        { 0xD19A, 0x80, 0},
        { 0xD19B, 0x06, 0},
        { 0xD19C, 0xA8, 0},
        { 0xD19D, 0x64, 0},
        { 0xD19E, 0x38, 0},
        { 0xD19F, 0x29, 0},
        { 0xD1A0, 0xA8, 0},
        { 0xD1A1, 0xA4, 0},
        { 0xD1A2, 0x40, 0},
        { 0xD1A3, 0x08, 0},
        { 0xD1A4, 0x8C, 0},
        { 0xD1A5, 0x63, 0},
        { 0xD1A6, 0x00, 0},
        { 0xD1A7, 0x00, 0},
        { 0xD1A8, 0xA8, 0},
        { 0xD1A9, 0xE4, 0},
        { 0xD1AA, 0x38, 0},
        { 0xD1AB, 0x2A, 0},
        { 0xD1AC, 0xA8, 0},
        { 0xD1AD, 0xC4, 0},
        { 0xD1AE, 0x40, 0},
        { 0xD1AF, 0x09, 0},
        { 0xD1B0, 0xD8, 0},
        { 0xD1B1, 0x05, 0},
        { 0xD1B2, 0x18, 0},
        { 0xD1B3, 0x00, 0},
        { 0xD1B4, 0x8C, 0},
        { 0xD1B5, 0x67, 0},
        { 0xD1B6, 0x00, 0},
        { 0xD1B7, 0x00, 0},
        { 0xD1B8, 0xA8, 0},
        { 0xD1B9, 0xA4, 0},
        { 0xD1BA, 0x38, 0},
        { 0xD1BB, 0x24, 0},
        { 0xD1BC, 0xD8, 0},
        { 0xD1BD, 0x06, 0},
        { 0xD1BE, 0x18, 0},
        { 0xD1BF, 0x00, 0},
        { 0xD1C0, 0x8C, 0},
        { 0xD1C1, 0x65, 0},
        { 0xD1C2, 0x00, 0},
        { 0xD1C3, 0x00, 0},
        { 0xD1C4, 0xA4, 0},
        { 0xD1C5, 0x63, 0},
        { 0xD1C6, 0x00, 0},
        { 0xD1C7, 0x40, 0},
        { 0xD1C8, 0xBC, 0},
        { 0xD1C9, 0x23, 0},
        { 0xD1CA, 0x00, 0},
        { 0xD1CB, 0x00, 0},
        { 0xD1CC, 0x13, 0},
        { 0xD1CD, 0xFF, 0},
        { 0xD1CE, 0xFF, 0},
        { 0xD1CF, 0xC4, 0},
        { 0xD1D0, 0xA8, 0},
        { 0xD1D1, 0x64, 0},
        { 0xD1D2, 0x6E, 0},
        { 0xD1D3, 0x44, 0},
        { 0xD1D4, 0xA8, 0},
        { 0xD1D5, 0xA4, 0},
        { 0xD1D6, 0x55, 0},
        { 0xD1D7, 0x86, 0},
        { 0xD1D8, 0x8C, 0},
        { 0xD1D9, 0x63, 0},
        { 0xD1DA, 0x00, 0},
        { 0xD1DB, 0x00, 0},
        { 0xD1DC, 0xA8, 0},
        { 0xD1DD, 0xC4, 0},
        { 0xD1DE, 0x6E, 0},
        { 0xD1DF, 0x45, 0},
        { 0xD1E0, 0xA8, 0},
        { 0xD1E1, 0xE4, 0},
        { 0xD1E2, 0x55, 0},
        { 0xD1E3, 0x87, 0},
        { 0xD1E4, 0xD8, 0},
        { 0xD1E5, 0x05, 0},
        { 0xD1E6, 0x18, 0},
        { 0xD1E7, 0x00, 0},
        { 0xD1E8, 0x8C, 0},
        { 0xD1E9, 0x66, 0},
        { 0xD1EA, 0x00, 0},
        { 0xD1EB, 0x00, 0},
        { 0xD1EC, 0xA8, 0},
        { 0xD1ED, 0xA4, 0},
        { 0xD1EE, 0x6E, 0},
        { 0xD1EF, 0x46, 0},
        { 0xD1F0, 0xD8, 0},
        { 0xD1F1, 0x07, 0},
        { 0xD1F2, 0x18, 0},
        { 0xD1F3, 0x00, 0},
        { 0xD1F4, 0xA8, 0},
        { 0xD1F5, 0x84, 0},
        { 0xD1F6, 0x55, 0},
        { 0xD1F7, 0x88, 0},
        { 0xD1F8, 0x8C, 0},
        { 0xD1F9, 0x65, 0},
        { 0xD1FA, 0x00, 0},
        { 0xD1FB, 0x00, 0},
        { 0xD1FC, 0xD8, 0},
        { 0xD1FD, 0x04, 0},
        { 0xD1FE, 0x18, 0},
        { 0xD1FF, 0x00, 0},
        { 0xD200, 0x03, 0},
        { 0xD201, 0xFF, 0},
        { 0xD202, 0xFF, 0},
        { 0xD203, 0xB8, 0},
        { 0xD204, 0x18, 0},
        { 0xD205, 0xE0, 0},
        { 0xD206, 0x80, 0},
        { 0xD207, 0x06, 0},
        { 0xD208, 0xA8, 0},
        { 0xD209, 0x83, 0},
        { 0xD20A, 0x6E, 0},
        { 0xD20B, 0x43, 0},
        { 0xD20C, 0xA8, 0},
        { 0xD20D, 0xE3, 0},
        { 0xD20E, 0x38, 0},
        { 0xD20F, 0x0F, 0},
        { 0xD210, 0x8C, 0},
        { 0xD211, 0x84, 0},
        { 0xD212, 0x00, 0},
        { 0xD213, 0x00, 0},
        { 0xD214, 0xA8, 0},
        { 0xD215, 0xA3, 0},
        { 0xD216, 0x38, 0},
        { 0xD217, 0x0E, 0},
        { 0xD218, 0xA8, 0},
        { 0xD219, 0xC3, 0},
        { 0xD21A, 0x6E, 0},
        { 0xD21B, 0x42, 0},
        { 0xD21C, 0xD8, 0},
        { 0xD21D, 0x07, 0},
        { 0xD21E, 0x20, 0},
        { 0xD21F, 0x00, 0},
        { 0xD220, 0x8C, 0},
        { 0xD221, 0x66, 0},
        { 0xD222, 0x00, 0},
        { 0xD223, 0x00, 0},
        { 0xD224, 0xD8, 0},
        { 0xD225, 0x05, 0},
        { 0xD226, 0x18, 0},
        { 0xD227, 0x00, 0},
        { 0xD228, 0x44, 0},
        { 0xD229, 0x00, 0},
        { 0xD22A, 0x48, 0},
        { 0xD22B, 0x00, 0},
        { 0xD22C, 0x15, 0},
        { 0xD22D, 0x00, 0},
        { 0xD22E, 0x00, 0},
        { 0xD22F, 0x00, 0},
        { 0xD230, 0x9C, 0},
        { 0xD231, 0x21, 0},
        { 0xD232, 0xFF, 0},
        { 0xD233, 0xFC, 0},
        { 0xD234, 0xD4, 0},
        { 0xD235, 0x01, 0},
        { 0xD236, 0x48, 0},
        { 0xD237, 0x00, 0},
        { 0xD238, 0x18, 0},
        { 0xD239, 0x60, 0},
        { 0xD23A, 0x00, 0},
        { 0xD23B, 0x01, 0},
        { 0xD23C, 0xA8, 0},
        { 0xD23D, 0x63, 0},
        { 0xD23E, 0x07, 0},
        { 0xD23F, 0x80, 0},
        { 0xD240, 0x8C, 0},
        { 0xD241, 0x63, 0},
        { 0xD242, 0x00, 0},
        { 0xD243, 0x68, 0},
        { 0xD244, 0xBC, 0},
        { 0xD245, 0x03, 0},
        { 0xD246, 0x00, 0},
        { 0xD247, 0x00, 0},
        { 0xD248, 0x10, 0},
        { 0xD249, 0x00, 0},
        { 0xD24A, 0x00, 0},
        { 0xD24B, 0x0C, 0},
        { 0xD24C, 0x15, 0},
        { 0xD24D, 0x00, 0},
        { 0xD24E, 0x00, 0},
        { 0xD24F, 0x00, 0},
        { 0xD250, 0x07, 0},
        { 0xD251, 0xFF, 0},
        { 0xD252, 0xDA, 0},
        { 0xD253, 0x00, 0},
        { 0xD254, 0x15, 0},
        { 0xD255, 0x00, 0},
        { 0xD256, 0x00, 0},
        { 0xD257, 0x00, 0},
        { 0xD258, 0x18, 0},
        { 0xD259, 0x60, 0},
        { 0xD25A, 0x80, 0},
        { 0xD25B, 0x06, 0},
        { 0xD25C, 0xA8, 0},
        { 0xD25D, 0x63, 0},
        { 0xD25E, 0xC4, 0},
        { 0xD25F, 0xB8, 0},
        { 0xD260, 0x8C, 0},
        { 0xD261, 0x63, 0},
        { 0xD262, 0x00, 0},
        { 0xD263, 0x00, 0},
        { 0xD264, 0xBC, 0},
        { 0xD265, 0x23, 0},
        { 0xD266, 0x00, 0},
        { 0xD267, 0x01, 0},
        { 0xD268, 0x10, 0},
        { 0xD269, 0x00, 0},
        { 0xD26A, 0x00, 0},
        { 0xD26B, 0x25, 0},
        { 0xD26C, 0x9D, 0},
        { 0xD26D, 0x00, 0},
        { 0xD26E, 0x00, 0},
        { 0xD26F, 0x00, 0},
        { 0xD270, 0x00, 0},
        { 0xD271, 0x00, 0},
        { 0xD272, 0x00, 0},
        { 0xD273, 0x0B, 0},
        { 0xD274, 0xB8, 0},
        { 0xD275, 0xE8, 0},
        { 0xD276, 0x00, 0},
        { 0xD277, 0x02, 0},
        { 0xD278, 0x07, 0},
        { 0xD279, 0xFF, 0},
        { 0xD27A, 0xD6, 0},
        { 0xD27B, 0x8C, 0},
        { 0xD27C, 0x15, 0},
        { 0xD27D, 0x00, 0},
        { 0xD27E, 0x00, 0},
        { 0xD27F, 0x00, 0},
        { 0xD280, 0x18, 0},
        { 0xD281, 0x60, 0},
        { 0xD282, 0x80, 0},
        { 0xD283, 0x06, 0},
        { 0xD284, 0xA8, 0},
        { 0xD285, 0x63, 0},
        { 0xD286, 0xC4, 0},
        { 0xD287, 0xB8, 0},
        { 0xD288, 0x8C, 0},
        { 0xD289, 0x63, 0},
        { 0xD28A, 0x00, 0},
        { 0xD28B, 0x00, 0},
        { 0xD28C, 0xBC, 0},
        { 0xD28D, 0x23, 0},
        { 0xD28E, 0x00, 0},
        { 0xD28F, 0x01, 0},
        { 0xD290, 0x10, 0},
        { 0xD291, 0x00, 0},
        { 0xD292, 0x00, 0},
        { 0xD293, 0x1B, 0},
        { 0xD294, 0x9D, 0},
        { 0xD295, 0x00, 0},
        { 0xD296, 0x00, 0},
        { 0xD297, 0x00, 0},
        { 0xD298, 0xB8, 0},
        { 0xD299, 0xE8, 0},
        { 0xD29A, 0x00, 0},
        { 0xD29B, 0x02, 0},
        { 0xD29C, 0x9C, 0},
        { 0xD29D, 0xC0, 0},
        { 0xD29E, 0x00, 0},
        { 0xD29F, 0x00, 0},
        { 0xD2A0, 0x18, 0},
        { 0xD2A1, 0xA0, 0},
        { 0xD2A2, 0x80, 0},
        { 0xD2A3, 0x06, 0},
        { 0xD2A4, 0xE0, 0},
        { 0xD2A5, 0x67, 0},
        { 0xD2A6, 0x30, 0},
        { 0xD2A7, 0x00, 0},
        { 0xD2A8, 0xA8, 0},
        { 0xD2A9, 0xA5, 0},
        { 0xD2AA, 0xCE, 0},
        { 0xD2AB, 0xB0, 0},
        { 0xD2AC, 0x19, 0},
        { 0xD2AD, 0x60, 0},
        { 0xD2AE, 0x00, 0},
        { 0xD2AF, 0x01, 0},
        { 0xD2B0, 0xA9, 0},
        { 0xD2B1, 0x6B, 0},
        { 0xD2B2, 0x06, 0},
        { 0xD2B3, 0x14, 0},
        { 0xD2B4, 0xE0, 0},
        { 0xD2B5, 0x83, 0},
        { 0xD2B6, 0x28, 0},
        { 0xD2B7, 0x00, 0},
        { 0xD2B8, 0x9C, 0},
        { 0xD2B9, 0xC6, 0},
        { 0xD2BA, 0x00, 0},
        { 0xD2BB, 0x01, 0},
        { 0xD2BC, 0xE0, 0},
        { 0xD2BD, 0x63, 0},
        { 0xD2BE, 0x18, 0},
        { 0xD2BF, 0x00, 0},
        { 0xD2C0, 0x8C, 0},
        { 0xD2C1, 0x84, 0},
        { 0xD2C2, 0x00, 0},
        { 0xD2C3, 0x00, 0},
        { 0xD2C4, 0xE0, 0},
        { 0xD2C5, 0xA3, 0},
        { 0xD2C6, 0x58, 0},
        { 0xD2C7, 0x00, 0},
        { 0xD2C8, 0xA4, 0},
        { 0xD2C9, 0xC6, 0},
        { 0xD2CA, 0x00, 0},
        { 0xD2CB, 0xFF, 0},
        { 0xD2CC, 0xB8, 0},
        { 0xD2CD, 0x64, 0},
        { 0xD2CE, 0x00, 0},
        { 0xD2CF, 0x18, 0},
        { 0xD2D0, 0xBC, 0},
        { 0xD2D1, 0x46, 0},
        { 0xD2D2, 0x00, 0},
        { 0xD2D3, 0x03, 0},
        { 0xD2D4, 0x94, 0},
        { 0xD2D5, 0x85, 0},
        { 0xD2D6, 0x00, 0},
        { 0xD2D7, 0x00, 0},
        { 0xD2D8, 0xB8, 0},
        { 0xD2D9, 0x63, 0},
        { 0xD2DA, 0x00, 0},
        { 0xD2DB, 0x98, 0},
        { 0xD2DC, 0xE0, 0},
        { 0xD2DD, 0x64, 0},
        { 0xD2DE, 0x18, 0},
        { 0xD2DF, 0x00, 0},
        { 0xD2E0, 0x0F, 0},
        { 0xD2E1, 0xFF, 0},
        { 0xD2E2, 0xFF, 0},
        { 0xD2E3, 0xF0, 0},
        { 0xD2E4, 0xDC, 0},
        { 0xD2E5, 0x05, 0},
        { 0xD2E6, 0x18, 0},
        { 0xD2E7, 0x00, 0},
        { 0xD2E8, 0x9C, 0},
        { 0xD2E9, 0x68, 0},
        { 0xD2EA, 0x00, 0},
        { 0xD2EB, 0x01, 0},
        { 0xD2EC, 0xA5, 0},
        { 0xD2ED, 0x03, 0},
        { 0xD2EE, 0x00, 0},
        { 0xD2EF, 0xFF, 0},
        { 0xD2F0, 0xBC, 0},
        { 0xD2F1, 0x48, 0},
        { 0xD2F2, 0x00, 0},
        { 0xD2F3, 0x01, 0},
        { 0xD2F4, 0x0F, 0},
        { 0xD2F5, 0xFF, 0},
        { 0xD2F6, 0xFF, 0},
        { 0xD2F7, 0xEA, 0},
        { 0xD2F8, 0xB8, 0},
        { 0xD2F9, 0xE8, 0},
        { 0xD2FA, 0x00, 0},
        { 0xD2FB, 0x02, 0},
        { 0xD2FC, 0x18, 0},
        { 0xD2FD, 0x60, 0},
        { 0xD2FE, 0x00, 0},
        { 0xD2FF, 0x01, 0},
        { 0xD300, 0xA8, 0},
        { 0xD301, 0x63, 0},
        { 0xD302, 0x06, 0},
        { 0xD303, 0x14, 0},
        { 0xD304, 0x07, 0},
        { 0xD305, 0xFF, 0},
        { 0xD306, 0xE4, 0},
        { 0xD307, 0x6D, 0},
        { 0xD308, 0x9C, 0},
        { 0xD309, 0x83, 0},
        { 0xD30A, 0x00, 0},
        { 0xD30B, 0x10, 0},
        { 0xD30C, 0x85, 0},
        { 0xD30D, 0x21, 0},
        { 0xD30E, 0x00, 0},
        { 0xD30F, 0x00, 0},
        { 0xD310, 0x44, 0},
        { 0xD311, 0x00, 0},
        { 0xD312, 0x48, 0},
        { 0xD313, 0x00, 0},
        { 0xD314, 0x9C, 0},
        { 0xD315, 0x21, 0},
        { 0xD316, 0x00, 0},
        { 0xD317, 0x04, 0},
        { 0xD318, 0x18, 0},
        { 0xD319, 0x60, 0},
        { 0xD31A, 0x00, 0},
        { 0xD31B, 0x01, 0},
        { 0xD31C, 0x9C, 0},
        { 0xD31D, 0x80, 0},
        { 0xD31E, 0xFF, 0},
        { 0xD31F, 0xFF, 0},
        { 0xD320, 0xA8, 0},
        { 0xD321, 0x63, 0},
        { 0xD322, 0x09, 0},
        { 0xD323, 0xEF, 0},
        { 0xD324, 0xD8, 0},
        { 0xD325, 0x03, 0},
        { 0xD326, 0x20, 0},
        { 0xD327, 0x00, 0},
        { 0xD328, 0x18, 0},
        { 0xD329, 0x60, 0},
        { 0xD32A, 0x80, 0},
        { 0xD32B, 0x06, 0},
        { 0xD32C, 0xA8, 0},
        { 0xD32D, 0x63, 0},
        { 0xD32E, 0xC9, 0},
        { 0xD32F, 0xEF, 0},
        { 0xD330, 0xD8, 0},
        { 0xD331, 0x03, 0},
        { 0xD332, 0x20, 0},
        { 0xD333, 0x00, 0},
        { 0xD334, 0x44, 0},
        { 0xD335, 0x00, 0},
        { 0xD336, 0x48, 0},
        { 0xD337, 0x00, 0},
        { 0xD338, 0x15, 0},
        { 0xD339, 0x00, 0},
        { 0xD33A, 0x00, 0},
        { 0xD33B, 0x00, 0},
        { 0xD33C, 0x18, 0},
        { 0xD33D, 0x80, 0},
        { 0xD33E, 0x00, 0},
        { 0xD33F, 0x01, 0},
        { 0xD340, 0xA8, 0},
        { 0xD341, 0x84, 0},
        { 0xD342, 0x0A, 0},
        { 0xD343, 0x12, 0},
        { 0xD344, 0x8C, 0},
        { 0xD345, 0x64, 0},
        { 0xD346, 0x00, 0},
        { 0xD347, 0x00, 0},
        { 0xD348, 0xBC, 0},
        { 0xD349, 0x03, 0},
        { 0xD34A, 0x00, 0},
        { 0xD34B, 0x00, 0},
        { 0xD34C, 0x13, 0},
        { 0xD34D, 0xFF, 0},
        { 0xD34E, 0xFF, 0},
        { 0xD34F, 0xFE, 0},
        { 0xD350, 0x15, 0},
        { 0xD351, 0x00, 0},
        { 0xD352, 0x00, 0},
        { 0xD353, 0x00, 0},
        { 0xD354, 0x44, 0},
        { 0xD355, 0x00, 0},
        { 0xD356, 0x48, 0},
        { 0xD357, 0x00, 0},
        { 0xD358, 0x15, 0},
        { 0xD359, 0x00, 0},
        { 0xD35A, 0x00, 0},
        { 0xD35B, 0x00, 0},
        { 0xD35C, 0x00, 0},
        { 0xD35D, 0x00, 0},
        { 0xD35E, 0x00, 0},
        { 0xD35F, 0x00, 0},
        { 0xD360, 0x00, 0},
        { 0xD361, 0x00, 0},
        { 0xD362, 0x00, 0},
        { 0xD363, 0x00, 0},
        { 0x6F0E, 0x33, 0},
        { 0x6F0F, 0x33, 0},
        { 0x460E, 0x08, 0},
        { 0x460F, 0x01, 0},
        { 0x4610, 0x00, 0},
        { 0x4611, 0x01, 0},
        { 0x4612, 0x00, 0},
        { 0x4613, 0x01, 0},

        { 0x4608, 0x00, 0},
        { 0x4609, 0x08, 0},
        { 0x6804, 0x00, 0},
        { 0x6805, 0x06, 0},
        { 0x6806, 0x00, 0},
        { 0x5120, 0x00, 0},
        { 0x3510, 0x00, 0},
        { 0x3504, 0x00, 0},
        { 0x6800, 0x00, 0},
        { 0x6F0D, 0x0F, 0},
        { 0x5000, 0xFF, 0},
        { 0x5001, 0xBF, 0},
        { 0x5002, 0x7E, 0},
        { 0x503D, 0x00, 0},
        { 0xC450, 0x01, 0},
        { 0xC452, 0x04, 0},
        { 0xC453, 0x00, 0},
        { 0xC454, 0x00, 0},
        { 0xC455, 0x00, 0},
        { 0xC456, 0x00, 0},
        { 0xC457, 0x00, 0},
        { 0xC458, 0x00, 0},
        { 0xC459, 0x00, 0},
        { 0xC45B, 0x00, 0},
        { 0xC45C, 0x00, 0},
        { 0xC45D, 0x00, 0},
        { 0xC45E, 0x00, 0},
        { 0xC45F, 0x00, 0},
        { 0xC460, 0x00, 0},
        { 0xC461, 0x01, 0},
        { 0xC462, 0x01, 0},
        { 0xC464, 0x88, 0},
        { 0xC465, 0x00, 0},
        { 0xC466, 0x8A, 0},
        { 0xC467, 0x00, 0},
        { 0xC468, 0x86, 0},
        { 0xC469, 0x00, 0},
        { 0xC46A, 0x40, 0},
        { 0xC46B, 0x50, 0},
        { 0xC46C, 0x30, 0},
        { 0xC46D, 0x28, 0},
        { 0xC46E, 0x60, 0},
        { 0xC46F, 0x40, 0},
        { 0xC47C, 0x01, 0},
        { 0xC47D, 0x38, 0},
        { 0xC47E, 0x00, 0},
        { 0xC47F, 0x00, 0},
        { 0xC480, 0x00, 0},
        { 0xC481, 0xFF, 0},
        { 0xC482, 0x00, 0},
        { 0xC483, 0x40, 0},
        { 0xC484, 0x00, 0},
        { 0xC485, 0x18, 0},
        { 0xC486, 0x00, 0},
        { 0xC487, 0x18, 0},
        { 0xC488, 0x34, 0},
        { 0xC489, 0x00, 0},
        { 0xC48A, 0x34, 0},
        { 0xC48B, 0x00, 0},
        { 0xC48C, 0x00, 0},
        { 0xC48D, 0x04, 0},
        { 0xC48E, 0x00, 0},
        { 0xC48F, 0x04, 0},
        { 0xC490, 0x07, 0},
        { 0xC492, 0x20, 0},
        { 0xC493, 0x08, 0},
        { 0xC498, 0x02, 0},
        { 0xC499, 0x00, 0},
        { 0xC49A, 0x02, 0},
        { 0xC49B, 0x00, 0},
        { 0xC49C, 0x02, 0},
        { 0xC49D, 0x00, 0},
        { 0xC49E, 0x02, 0},
        { 0xC49F, 0x60, 0},
        { 0xC4A0, 0x03, 0},
        { 0xC4A1, 0x00, 0},
        { 0xC4A2, 0x04, 0},
        { 0xC4A3, 0x00, 0},
        { 0xC4A4, 0x00, 0},
        { 0xC4A5, 0x10, 0},
        { 0xC4A6, 0x00, 0},
        { 0xC4A7, 0x40, 0},
        { 0xC4A8, 0x00, 0},
        { 0xC4A9, 0x80, 0},
        { 0xC4AA, 0x0D, 0},
        { 0xC4AB, 0x00, 0},
        { 0xC4AC, 0x0F, 0},
        { 0xC4AD, 0xC0, 0},
        { 0xC4B4, 0x01, 0},
        { 0xC4B5, 0x01, 0},
        { 0xC4B6, 0x00, 0},
        { 0xC4B7, 0x01, 0},
        { 0xC4B8, 0x00, 0},
        { 0xC4B9, 0x01, 0},
        { 0xC4BA, 0x01, 0},
        { 0xC4BB, 0x00, 0},
        { 0xC4BC, 0x01, 0},
        { 0xC4BD, 0x60, 0},
        { 0xC4BE, 0x02, 0},
        { 0xC4BF, 0x33, 0},
        { 0xC4C8, 0x03, 0},
        { 0xC4C9, 0xD0, 0},
        { 0xC4CA, 0x0E, 0},
        { 0xC4CB, 0x00, 0},
        { 0xC4CC, 0x10, 0},
        { 0xC4CD, 0x18, 0},
        { 0xC4CE, 0x10, 0},
        { 0xC4CF, 0x18, 0},
        { 0xC4D0, 0x04, 0},
        { 0xC4D1, 0x80, 0},
        { 0xC4E0, 0x04, 0},
        { 0xC4E1, 0x02, 0},
        { 0xC4E2, 0x01, 0},
        { 0xC4E4, 0x10, 0},
        { 0xC4E5, 0x20, 0},
        { 0xC4E6, 0x30, 0},
        { 0xC4E7, 0x40, 0},
        { 0xC4E8, 0x50, 0},
        { 0xC4E9, 0x60, 0},
        { 0xC4EA, 0x70, 0},
        { 0xC4EB, 0x80, 0},
        { 0xC4EC, 0x90, 0},
        { 0xC4ED, 0xA0, 0},
        { 0xC4EE, 0xB0, 0},
        { 0xC4EF, 0xC0, 0},
        { 0xC4F0, 0xD0, 0},
        { 0xC4F1, 0xE0, 0},
        { 0xC4F2, 0xF0, 0},
        { 0xC4F3, 0x80, 0},
        { 0xC4F4, 0x00, 0},
        { 0xC4F5, 0x20, 0},
        { 0xC4F6, 0x02, 0},
        { 0xC4F7, 0x00, 0},
        { 0xC4F8, 0x04, 0},
        { 0xC4F9, 0x0B, 0},
        { 0xC4FA, 0x00, 0},
        { 0xC4FB, 0x01, 0},
        { 0xC4FC, 0x01, 0},
        { 0xC4FD, 0x00, 0},
        { 0xC4FE, 0x04, 0},
        { 0xC4FF, 0x02, 0},
        { 0xC500, 0x48, 0},
        { 0xC501, 0x74, 0},
        { 0xC502, 0x58, 0},
        { 0xC503, 0x80, 0},
        { 0xC504, 0x05, 0},
        { 0xC505, 0x80, 0},
        { 0xC506, 0x03, 0},
        { 0xC507, 0x80, 0},
        { 0xC508, 0x01, 0},
        { 0xC509, 0xC0, 0},
        { 0xC50A, 0x01, 0},
        { 0xC50B, 0xA0, 0},
        { 0xC50C, 0x01, 0},
        { 0xC50D, 0x2C, 0},
        { 0xC50E, 0x01, 0},
        { 0xC50F, 0x0A, 0},
        { 0xC510, 0x00, 0},
        { 0xC511, 0x01, 0},
        { 0xC512, 0x01, 0},
        { 0xC513, 0x80, 0},
        { 0xC514, 0x04, 0},
        { 0xC515, 0x00, 0},
        { 0xC518, 0x03, 0},
        { 0xC519, 0x48, 0},
        { 0xC51A, 0x07, 0},
        { 0xC51B, 0x70, 0},
        { 0xC2E0, 0x00, 0},
        { 0xC2E1, 0x51, 0},
        { 0xC2E2, 0x00, 0},
        { 0xC2E3, 0xD6, 0},
        { 0xC2E4, 0x01, 0},
        { 0xC2E5, 0x5E, 0},
        { 0xC2E9, 0x01, 0},
        { 0xC2EA, 0x7A, 0},
        { 0xC2EB, 0x90, 0},
        { 0xC2ED, 0x00, 0},
        { 0xC2EE, 0x7A, 0},
        { 0xC2EF, 0x64, 0},
        { 0xC308, 0x00, 0},
        { 0xC309, 0x00, 0},
        { 0xC30A, 0x00, 0},
        { 0xC30C, 0x00, 0},
        { 0xC30D, 0x01, 0},
        { 0xC30E, 0x00, 0},
        { 0xC30F, 0x00, 0},
        { 0xC310, 0x01, 0},
        { 0xC311, 0x60, 0},
        { 0xC312, 0xFF, 0},
        { 0xC313, 0x08, 0},
        { 0xC314, 0x01, 0},
        { 0xC315, 0x7F, 0},
        { 0xC316, 0xFF, 0},
        { 0xC317, 0x0B, 0},
        { 0xC318, 0x00, 0},
        { 0xC319, 0x0C, 0},
        { 0xC31A, 0x00, 0},
        { 0xC31B, 0xE0, 0},
        { 0xC31C, 0x00, 0},
        { 0xC31D, 0x14, 0},
        { 0xC31E, 0x00, 0},
        { 0xC31F, 0xC5, 0},
        { 0xC320, 0xFF, 0},
        { 0xC321, 0x4B, 0},
        { 0xC322, 0xFF, 0},
        { 0xC323, 0xF0, 0},
        { 0xC324, 0xFF, 0},
        { 0xC325, 0xE8, 0},
        { 0xC326, 0x00, 0},
        { 0xC327, 0x46, 0},
        { 0xC328, 0xFF, 0},
        { 0xC329, 0xD2, 0},
        { 0xC32A, 0xFF, 0},
        { 0xC32B, 0xE4, 0},
        { 0xC32C, 0xFF, 0},
        { 0xC32D, 0xBB, 0},
        { 0xC32E, 0x00, 0},
        { 0xC32F, 0x61, 0},
        { 0xC330, 0xFF, 0},
        { 0xC331, 0xF9, 0},
        { 0xC332, 0x00, 0},
        { 0xC333, 0xD9, 0},
        { 0xC334, 0x00, 0},
        { 0xC335, 0x2E, 0},
        { 0xC336, 0x00, 0},
        { 0xC337, 0xB1, 0},
        { 0xC338, 0xFF, 0},
        { 0xC339, 0x64, 0},
        { 0xC33A, 0xFF, 0},
        { 0xC33B, 0xEB, 0},
        { 0xC33C, 0xFF, 0},
        { 0xC33D, 0xE8, 0},
        { 0xC33E, 0x00, 0},
        { 0xC33F, 0x48, 0},
        { 0xC340, 0xFF, 0},
        { 0xC341, 0xD0, 0},
        { 0xC342, 0xFF, 0},
        { 0xC343, 0xED, 0},
        { 0xC344, 0xFF, 0},
        { 0xC345, 0xAD, 0},
        { 0xC346, 0x00, 0},
        { 0xC347, 0x66, 0},
        { 0xC348, 0x01, 0},
        { 0xC349, 0x00, 0},
        { 0x6700, 0x04, 0},
        { 0x6701, 0x7B, 0},
        { 0x6702, 0xFD, 0},
        { 0x6703, 0xF9, 0},
        { 0x6704, 0x3D, 0},
        { 0x6705, 0x71, 0},
        { 0x6706, 0x78, 0},
        { 0x6708, 0x05, 0},
        { 0x6F06, 0x6F, 0},
        { 0x6F07, 0x00, 0},
        { 0x6F0A, 0x6F, 0},
        { 0x6F0B, 0x00, 0},
        { 0x6F00, 0x03, 0},
        { 0xC34C, 0x01, 0},
        { 0xC34D, 0x00, 0},
        { 0xC34E, 0x46, 0},
        { 0xC34F, 0x55, 0},
        { 0xC350, 0x00, 0},
        { 0xC351, 0x40, 0},
        { 0xC352, 0x00, 0},
        { 0xC353, 0xFF, 0},
        { 0xC354, 0x04, 0},
        { 0xC355, 0x08, 0},
        { 0xC356, 0x01, 0},
        { 0xC357, 0xEF, 0},
        { 0xC358, 0x30, 0},
        { 0xC359, 0x01, 0},
        { 0xC35A, 0x64, 0},
        { 0xC35B, 0x46, 0},
        { 0xC35C, 0x00, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x3042, 0xF0, 0},
        { 0x301B, 0xF0, 0},
        { 0x301C, 0xF0, 0},
        { 0x301A, 0xF0, 0},

        { 0xCEB0, 0x00, 0 },
        { 0xCEB1, 0x00, 0 },
        { 0xCEB2, 0x00, 0 },
        { 0xCEB3, 0x00, 0 },
        { 0xCEB4, 0x00, 0 },
        { 0xCEB5, 0x00, 0 },
        { 0xCEB6, 0x00, 0 },
        { 0xCEB7, 0x00, 0 },
        { 0xC4BC, 0x01, 0 },
        { 0xC4BD, 0x60, 0 },
        /*  { 0x4709, 0x40, 0 }, */  /* Flip Bits MSB7 do DOUT0 for yuv422 8bit  */
        { 0x4709, 0x10, 0 },     /* Flip Bits MSB9 do DOUT0 for yuv422 10bit */
        /*  { 0x4605, 0x00, 0 }, */  /* 10-bit YUV */
        { 0x4605, 0x08, 0 },     /* 8-bit YUV */
        { 0x4300, PixFmt, 5 },     /* 0x3A=YUYV, 0x39=YVYU, 0x38=UYVY, 0x3B=VYUY */

#ifdef OV10635_COLOR_BAR
        /* Digital color bar */
        { 0x5000, 0x78, 0 },
        { 0x3042, 0xF9, 0 },
        { 0x370A, 0x04, 0 },
        { 0x503D, 0x80, 0 },
        { 0x503E, 0x00, 5 },
#endif

#ifdef OV10635_WALKING_ONES
        { 0x4709, 0xb, 5 },
#endif

#ifdef OV10635_CHECKER_BOARD
        { 0x5000, 0x78, 0 },
        { 0x3042, 0xF9, 0 },
        { 0x370A, 0x00, 0 },
        { 0x503D, 0x80, 0 },
        { 0x503E, 0x0A, 5 },
#endif

        { 0x3832, 0x01, 0  },
        { 0x3833, 0x1A, 0  },
        { 0x3834, 0x03, 60 },
        { 0x3835, 0x48, 60 },
        { 0x302E, 0x01, 0  },
    };
    arraySize = sizeof(InitParam) / sizeof(reg_val_t);

    for (UINT8 cam = 0; cam < IMX_MAX9286_CAMERAS_CNT; cam++) {
        if (cameraInitialized[cam] == true) {
            /* Image sensor initialization */
            for (UINT32 i = 0; i < arraySize; i++) {
                Status |= WriteRegOv10635((CHNL_IDX)cam, InitParam[i].regAddr, InitParam[i].regVal);
                if (Status) {
                    LOG_ERROR("OV10635 initialization error, idx: %d, Status: %!STATUS!", i, Status);
                }
                if (InitParam[i].delay != 0) {
                    KeStallExecutionProcessor(InitParam[i].delay * 1000);
                }
            }
        }
    }

    if (Status) {
        LOG_ERROR("OV10635 initialization failed %!STATUS!", Status);
    }
    return Status;
}

/**
 * @brief Probe video link from camera and set link state into private variables
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::LinkProbe()
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 linkStatus = 0;
    LOG_TRACE("%!FUNC!");

    /* Read status of video and configuration link between MAX9286 and MAX9271 */
    Status |= ReadRegMax9286(0x49, linkStatus);
    LOG_TRACE("Link status between MAX9286 and MAX9271 is %!STATUS!", linkStatus);

    for (int i = 0; i < IMX_MAX9286_CAMERAS_CNT; i++) {
        /* Check for previously initialized reverse channel with the MAX9271 serializer */
        if (linkStatus & IMX_MAX9286_CONFIGDET(i)) {
            reverseChnlConfigured = true;
        }

        /* Check for previously initialized cameras connected to MAX9271 serializer */
        if (linkStatus & IMX_MAX9286_VIDEODET(i)) {
            cameraInitialized[i] = true;
            cameraChainInitialized = true;
        }
    }
    return Status;
}

/**
 * @brief Initialize the camera device at boot time to safe state.
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Init()
{
    NTSTATUS Status = STATUS_SUCCESS;
    UINT8 ChipID = 0U;
    LARGE_INTEGER delay{ 0u };

    LOG_TRACE("%!FUNC!");
    if (m_Camera_res.m_HasRstGpio) {
        m_Camera_res.m_RstGpio.Set(1);

        /* Delay approx 20ms. */
        delay.QuadPart = -20 * 10 * 1000;
        KeDelayExecutionThread(KernelMode, false, &delay);
    }
    /* Verify MAX9286 Chip ID */
    Status = Max9286_GetChipID(ChipID);
    if ((Status) || (ChipID != 0x40)) {
        LOG_ERROR("Invalid MAX9286 device ID 0x%04X. (Should be 0x40)", ChipID);
        return STATUS_NO_SUCH_DEVICE;
    }

    LinkProbe();

    return Status;
}

/**
 * @brief De-initialize the camera device.
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Deinit()
{
    NTSTATUS Status = STATUS_SUCCESS;
    LOG_TRACE("%!FUNC!");
    LOG_TRACE("Disable MAX9286 CSI-2 output");
    Status |= WriteRegMax9286(0x15, 0x03);
    return Status;
}

/**
 * @brief Stop the camera device outputting data.
 *
 * @return Returns @ref STATUS_SUCCESS if success, otherwise returns error code.
 */
NTSTATUS Ov10635_t::Stop()
{
    NTSTATUS Status = STATUS_SUCCESS;
    LOG_TRACE("%!FUNC!");
    LOG_TRACE("Disable MAX9286 CSI-2 output");
    Status |= WriteRegMax9286(0x15, 0x03);
    return Status;
}
